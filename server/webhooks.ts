import type { Report, Ticket, Paste } from "@shared/schema";

// Discord webhook URL - nastaven√Ω na Discord kan√°l ihosbin.fun moderace
const DISCORD_WEBHOOK_URL = process.env.DISCORD_WEBHOOK_URL || "https://discord.com/api/webhooks/1353411162825297951/blTPjUr9QKafwd0ABzaTbGMD5pQiyM5jy9LjCCo7TTdhjcCraYtbZeFefKYNdOHA1IMZ";

// V≈ædy povol√≠me webhooks, bez ohledu na produkƒçn√≠ nebo v√Ωvojov√© prost≈ôed√≠
const ENABLE_WEBHOOK = true;

interface WebhookPayload {
  content?: string;
  embeds?: Array<{
    title: string;
    description?: string;
    color?: number;
    fields?: Array<{
      name: string;
      value: string;
      inline?: boolean;
    }>;
    timestamp?: string;
    footer?: {
      text: string;
      icon_url?: string;
    };
  }>;
}

/**
 * Send message to Discord webhook
 */
export async function sendToDiscord(payload: WebhookPayload): Promise<void> {
  // Log the payload regardless of whether we send it
  console.log("[WEBHOOK]", JSON.stringify(payload, null, 2));
  
  // Only send the actual webhook if enabled and URL is configured
  if (ENABLE_WEBHOOK && DISCORD_WEBHOOK_URL) {
    try {
      const response = await fetch(DISCORD_WEBHOOK_URL, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });

      if (!response.ok) {
        console.error("Failed to send webhook:", await response.text());
      } else {
        console.log("‚úÖ Webhook sent successfully");
      }
    } catch (error) {
      console.error("Error sending webhook:", error);
    }
  } else {
    console.log("‚ö†Ô∏è Webhook sending is disabled or URL not configured");
  }
}

/**
 * Send abuse report to Discord
 */
export async function sendAbuseReport(report: Report, paste: Paste): Promise<void> {
  const pasteUrl = `https://beta.ihosbin.fun/paste/${paste.shortUrl}`;
  const pasteRawUrl = `https://beta.ihosbin.fun/api/paste/${paste.shortUrl}/raw`;
  
  // Add buttons for moderation actions
  const components = [
    {
      type: 1,
      components: [
        {
          type: 2,
          style: 4, // Red color for Delete
          custom_id: `delete_paste:${paste.id}`,
          label: "Delete & Block"
        }
      ]
    }
  ];

  return sendToDiscord({
    components,
    embeds: [
      {
        title: "‚ö†Ô∏è Nahl√°≈°en√≠ z√°vadn√©ho obsahu",
        description: `Byl nahl√°≈°en potenci√°lnƒõ z√°vadn√Ω obsah na ihosbin.fun. Je pot≈ôeba provƒõ≈ôit a p≈ô√≠padnƒõ odstranit. [Zobrazit paste](${pasteUrl})`,
        color: 16711680, // ƒåerven√°
        fields: [
          {
            name: "üÜî Paste ID",
            value: `${paste.id} (${paste.shortUrl})`,
            inline: true,
          },
          {
            name: "üìã N√°zev",
            value: paste.title || "Bez n√°zvu",
            inline: true,
          },
          {
            name: "üî† Jazyk",
            value: paste.syntax,
            inline: true,
          },
          {
            name: "üëÄ Zobrazen√≠",
            value: paste.views.toString(),
            inline: true,
          },
          {
            name: "‚ù§Ô∏è Obl√≠ben√©",
            value: paste.likes.toString(),
            inline: true,
          },
          {
            name: "‚è±Ô∏è Vytvo≈ôeno",
            value: new Date(paste.createdAt).toLocaleString(),
            inline: true,
          },
          {
            name: "‚ö†Ô∏è D≈Øvod nahl√°≈°en√≠",
            value: report.reason || "Neuvedeno",
          },
          {
            name: "üîç N√°hled obsahu",
            value: "```" + (paste.content.length > 400 
              ? paste.content.substring(0, 400) + "...\n[obsah zkr√°cen]" 
              : paste.content) + "```",
          },
        ],
        timestamp: new Date().toISOString(),
        footer: {
          text: "ihosbin.fun | Moderaƒçn√≠ syst√©m"
        }
      },
    ],
    content: `‚ö†Ô∏è **NOV√â NAHL√Å≈†EN√ç:** Byl nahl√°≈°en z√°vadn√Ω obsah - [Zobrazit](${pasteUrl}) | [Raw verze](${pasteRawUrl})`
  });
}

/**
 * Send support ticket to Discord
 */
export async function sendSupportTicket(ticket: Ticket): Promise<void> {
  const supportUrl = "https://beta.ihosbin.fun/support";
  
  return sendToDiscord({
    embeds: [
      {
        title: "üé´ Nov√Ω tiket podpory",
        description: `U≈æivatel odeslal nov√Ω po≈æadavek na podporu, kter√Ω vy≈æaduje reakci moder√°tora. [P≈ôej√≠t na str√°nku podpory](${supportUrl})`,
        color: 3447003, // Modr√°
        fields: [
          {
            name: "üìã P≈ôedmƒõt",
            value: ticket.subject || "Neposkytnut",
          },
          {
            name: "üìß Email",
            value: ticket.email || "Anonymn√≠ u≈æivatel",
            inline: true,
          },
          {
            name: "‚è±Ô∏è Vytvo≈ôeno",
            value: new Date(ticket.createdAt).toLocaleString(),
            inline: true,
          },
          {
            name: "üìù Zpr√°va",
            value: "```" + ticket.message + "```",
          },
        ],
        timestamp: new Date().toISOString(),
        footer: {
          text: "ihosbin.fun | Syst√©m podpory"
        }
      },
    ],
    content: `üì® **NOV√ù TIKET PODPORY:** Pros√≠m, zpracujte tento po≈æadavek co nejd≈ô√≠ve.`
  });
}
